--*************************************************************************
--Author:ESB18442
--Purpose:因刪除交易完成後會寫入1筆刪除交易之異動紀錄(tb_change_log)做為同步cip用
-- 在做同步cip的時候，會將最後寫入1筆之tb_change_log資料搬到his;
-- 所以在刪除交易不需要同步的時候，需要人工將(tb_Change_log、tb_change_log_lineitem、tb_cust_kyc資料搬至his
--*************************************************************************


SET SERVEROUTPUT ON
DECLARE
--SYS_CUR sys_refcursor ;
V_CIRCI_KEY VARCHAR2(30 CHAR) := 'Q12179702A';--輸入此次修正之顧客統編


V_CHANGE_LOG_CNT INT := 0 ;
V_CHANGE_LOG_LINEITEM_CNT INT := 0 ;
V_CUST_KYC_CNT INT := 0 ;


V_HIS_CHANGE_LOG_CNT INT := 0 ;
V_HIS_CHANGE_LOG_LINEITEM_CNT INT := 0 ;
V_HIS_CUST_KYC_CNT INT := 0 ;


V_TMP_CNT INT :=0;
BEGIN


--找測試案例用
--SELECT * FROM CIFX.TB_CHANGE_LOG CL
--where exists (select * from cifx.tb_cust_kyc where circi_key = cl.circi_key);


DBMS_OUTPUT.PUT_LINE('========= TEST START =========');
  
  SELECT COUNT(1) INTO V_CHANGE_LOG_CNT FROM CIFX.TB_CHANGE_LOG WHERE CIRCI_KEY = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_CHANGE_LOG_LINEITEM_CNT FROM CIFX.TB_CHANGE_LOG_LINEITEM WHERE CIRCI_KEY = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_CUST_KYC_CNT FROM CIFX.TB_CUST_KYC WHERE CIRCI_KEY = V_CIRCI_KEY;
  DBMS_OUTPUT.PUT_LINE('BEFORE CHANGE_LOG_CNT:'||V_CHANGE_LOG_CNT);
  DBMS_OUTPUT.PUT_LINE('BEFORE CHANGE_LOG_LINEITEM_CNT:'||V_CHANGE_LOG_LINEITEM_CNT);
  DBMS_OUTPUT.PUT_LINE('BEFORE CUST_KYC_CNT:'||V_CUST_KYC_CNT);
  
  SELECT COUNT(1) INTO V_HIS_CHANGE_LOG_CNT FROM CIFX.TB_HIS_CHANGE_LOG CL where cl.circi_key = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_HIS_CHANGE_LOG_LINEITEM_CNT FROM CIFX.TB_HIS_CHANGE_LOG_LINEITEM CLL where CLL.circi_key = V_CIRCI_KEY;
  select COUNT(1) INTO V_HIS_CUST_KYC_CNT from cifx.tb_HIS_cust_kyc where circi_key = V_CIRCI_KEY;
  DBMS_OUTPUT.PUT_LINE('BEFORE V_HIS_CHANGE_LOG_CNT:'||V_HIS_CHANGE_LOG_CNT);
  DBMS_OUTPUT.PUT_LINE('BEFORE V_HIS_CHANGE_LOG_LINEITEM_CNT:'||V_HIS_CHANGE_LOG_LINEITEM_CNT);
  DBMS_OUTPUT.PUT_LINE('BEFORE V_HIS_CUST_KYC_CNT:'||V_HIS_CUST_KYC_CNT);
  


  IF V_CHANGE_LOG_CNT > 0 THEN


    insert into CIFX.TB_HIS_CHANGE_LOG
    select
    cifx.fn_uuid_number30,
    CL.*
    from CIFX.TB_CHANGE_LOG CL
    WHERE CL.CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;


    --移除CHANGELOG資料源
    delete CIFX.TB_CHANGE_LOG
    WHERE CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;
    --確認刪除是否成功
    V_TMP_CNT := 0 ;
    SELECT COUNT(1) INTO V_TMP_CNT FROM CIFX.TB_CHANGE_LOG WHERE CIRCI_KEY = V_CIRCI_KEY;
  ELSE
    DBMS_OUTPUT.PUT_LINE(V_CIRCI_KEY ||'NO CHANGElOG DATA');
  END IF;
  
  IF V_CHANGE_LOG_LINEITEM_CNT > 0 THEN


    --資料搬遷changeLogLineitem
    insert into CIFX.TB_HIS_CHANGE_LOG_lineitem
    select
    cifx.fn_uuid_number30,
    CLL.*
    from CIFX.TB_CHANGE_LOG_lineitem CLl
    WHERE CLL.CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;


    --移除CHANGELOG_LINEITEM資料源
    delete CIFX.TB_CHANGE_LOG_LINEITEM
    WHERE CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;
    
    --確認刪除是否成功
    V_TMP_CNT := 0 ;
    SELECT COUNT(1) INTO V_TMP_CNT FROM CIFX.TB_CHANGE_LOG_LINEITEM WHERE CIRCI_KEY = V_CIRCI_KEY;
  ELSE
    DBMS_OUTPUT.PUT_LINE(V_CIRCI_KEY ||'NO CHANGElOG_LINEITEM DATA');
  END IF;
  
  
  IF V_CUST_KYC_CNT > 0 THEN
  
    --資料搬遷CUST_KYC
    insert into CIFX.TB_HIS_CUST_KYC
    select
    cifx.fn_uuid_number30,
    KYC.*
    from CIFX.TB_CUST_KYC KYC
    WHERE KYC.CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;
  
    --移除CUST_KYC資料源
    delete CIFX.TB_CUST_KYC
    WHERE CIRCI_KEY = V_CIRCI_KEY;
    COMMIT;
    
    --確認刪除是否成功
    V_TMP_CNT := 0 ;
    SELECT COUNT(1) INTO V_TMP_CNT FROM CIFX.TB_CUST_KYC WHERE CIRCI_KEY = V_CIRCI_KEY;
  
    
  
  ELSE
  DBMS_OUTPUT.PUT_LINE(V_CIRCI_KEY ||'NO CUST_KYC DATA');
  END IF;
  
  V_CHANGE_LOG_CNT:=0;
  V_CHANGE_LOG_LINEITEM_CNT:=0;
  V_CUST_KYC_CNT:=0;
  V_HIS_CHANGE_LOG_CNT:=0;
  V_HIS_CHANGE_LOG_LINEITEM_CNT:=0;
  V_HIS_CUST_KYC_CNT:=0;
  
  
  SELECT COUNT(1) INTO V_CHANGE_LOG_CNT FROM CIFX.TB_CHANGE_LOG WHERE CIRCI_KEY = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_CHANGE_LOG_LINEITEM_CNT FROM CIFX.TB_CHANGE_LOG_LINEITEM WHERE CIRCI_KEY = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_CUST_KYC_CNT FROM CIFX.TB_CUST_KYC WHERE CIRCI_KEY = V_CIRCI_KEY;
  DBMS_OUTPUT.PUT_LINE('AFTER CHANGE_LOG_CNT:'||V_CHANGE_LOG_CNT);
  DBMS_OUTPUT.PUT_LINE('AFTER CHANGE_LOG_LINEITEM_CNT:'||V_CHANGE_LOG_LINEITEM_CNT);
  DBMS_OUTPUT.PUT_LINE('AFTER CUST_KYC_CNT:'||V_CUST_KYC_CNT);
  
  SELECT COUNT(1) INTO V_HIS_CHANGE_LOG_CNT FROM CIFX.TB_HIS_CHANGE_LOG CL where cl.circi_key = V_CIRCI_KEY;
  SELECT COUNT(1) INTO V_HIS_CHANGE_LOG_LINEITEM_CNT FROM CIFX.TB_HIS_CHANGE_LOG_LINEITEM CLL where CLL.circi_key = V_CIRCI_KEY;
  select COUNT(1) INTO V_HIS_CUST_KYC_CNT from cifx.tb_HIS_cust_kyc where circi_key = V_CIRCI_KEY;
  DBMS_OUTPUT.PUT_LINE('AFTER V_HIS_CHANGE_LOG_CNT:'||V_HIS_CHANGE_LOG_CNT);
  DBMS_OUTPUT.PUT_LINE('AFTER V_HIS_CHANGE_LOG_LINEITEM_CNT:'||V_HIS_CHANGE_LOG_LINEITEM_CNT);
  DBMS_OUTPUT.PUT_LINE('AFTER V_HIS_CUST_KYC_CNT:'||V_HIS_CUST_KYC_CNT);


DBMS_OUTPUT.PUT_LINE('========= TEST END =========');
END;