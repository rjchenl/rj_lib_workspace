SELECT * FROM CIFX.TB_COLUMN_CODE_OPT OPT;
SELECT * FROM CIFX.TB_COLUMN_CODE;



ALTER TABLE cifx.tb_column_code_opt ADD column_code VARCHAR2(80);
ALTER TABLE CIFX.TB_COLUMN_CODE_OPT ADD JSON_NAME VARCHAR2(200 CHAR) ;
ALTER TABLE CIFX.TB_COLUMN_CODE_OPT ADD SCHEMA_NAME VARCHAR2(200 CHAR) ;
ALTER TABLE CIFX.TB_COLUMN_CODE_OPT ADD JOIN_KEY VARCHAR2(200 CHAR) ;

--新增OPT在COLUMN_CODE缺少的欄位
MERGE INTO cifx.tb_column_code_opt opt
USING (
select
*
from cifx.tb_column_code
WHERE table_name = 'TB_CUSTOMER'
) CC
ON (CC.TABLE_NAME = OPT.TABLE_NAME AND CC.COLUMN_NAME = OPT.COLUMN_NAME)  --資料源 與 比較源 連結條件
WHEN MATCHED THEN
UPDATE SET
OPT.COLUMN_CODE = CC.COLUMN_CODE
WHEN NOT MATCHED THEN
INSERT  (COLUMN_CODE,TABLE_NAME,COLUMN_NAME,COLUMN_DESC)
VALUES (CC.COLUMN_CODE,CC.TABLE_NAME,CC.COLUMN_NAME,CC.COLUMN_DESC)
;
commit;
/


--新增 query_outout_json_name
MERGE INTO CIFX.TB_COLUMN_CODE_OPT OPT
USING(
SELECT column_code,query_output_json_name FROM CIFX.TB_SYS_COL_ACT
group by column_code,query_output_json_name
having column_code is not null and query_output_json_name is not null
) ACT
ON (ACT.COLUMN_CODE = OPT.COLUMN_CODE)
WHEN MATCHED THEN
UPDATE SET
OPT.JSON_NAME = ACT.QUERY_OUTPUT_JSON_NAME
;
/
--新增 udpate_input_json_name
MERGE INTO CIFX.TB_COLUMN_CODE_OPT OPT
USING(
SELECT column_code,update_input_json_name FROM CIFX.TB_SYS_COL_ACT
group by column_code,update_input_json_name
having update_input_json_name is not null

) ACT
ON (ACT.COLUMN_CODE = OPT.COLUMN_CODE)
WHEN MATCHED THEN
UPDATE SET
OPT.JSON_NAME = ACT.update_input_json_name
;
/
--SHCEMA_NAME
MERGE INTO CIFX.TB_COLUMN_CODE_OPT OPT
USING(
SELECT COLUMN_CODE,SCHEMA_NAME FROM CIFX.TB_COLUMN_CODE
) CC
ON (CC.COLUMN_CODE = OPT.COLUMN_CODE)
WHEN MATCHED THEN
UPDATE SET
OPT.SCHEMA_NAME = CC.SCHEMA_NAME
;
/
--JOIN KEY
MERGE INTO CIFX.TB_COLUMN_CODE_OPT OPT
USING(
SELECT COLUMN_CODE,SCHEMA_NAME,JOIN_KEY FROM CIFX.TB_COLUMN_CODE
WHERE JOIN_KEY IS NOT NULL
) CC
ON (CC.COLUMN_CODE = OPT.COLUMN_CODE)
WHEN MATCHED THEN
UPDATE SET
OPT.JOIN_KEY = CC.JOIN_KEY
;
/

