TABLE_NAME	COLUMN_NAME	COLUMN_DESC	COLUMN_GROUP	DATA_TYPE	DATA_LEN_TAR	DATA_LEN_SRC	IS_FULLWIDTH	SPECIFIC_RULE_TYPE	CODE_TABLE_TYPE	CODE_CATEGORY	COLUMN_CODE	JSON_NAME	SCHEMA_NAME	JOIN_KEY	PUSH_CODE	genCode
TB_CUSTOMER	FIRST_TXN_DATE	顧客首次往來日期		VARCHAR2	20	8	H	D			X0171	customerFirstTransactionDate	CIFX			when 'FIRST_TXN_DATE' then v_tb_customer_after.FIRST_TXN_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CREATION_DPT_CODE	建檔單位		VARCHAR2	4	4	H	O	TB_BRANCH	bh_code	X0136	creationDepartment	CIFX			when 'CREATION_DPT_CODE' then v_tb_customer_after.CREATION_DPT_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PRINCIPAL_CERT_NO	負責人統編	PRINCIPAL	VARCHAR2	20	10	H				X0217	principalCertificationNumber	CIFX			when 'PRINCIPAL_CERT_NO' then v_tb_customer_after.PRINCIPAL_CERT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TAX_ID_NO	稅籍代號		VARCHAR2	10	10	H				X0242	taxIdentificationNumber	CIFX			when 'TAX_ID_NO' then v_tb_customer_after.TAX_ID_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	INDUSTRY_PROPS_TYPE_CODE	行業屬性類別代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	industry_props_type_code	X0181	industrialPropertyType	CIFX			when 'INDUSTRY_PROPS_TYPE_CODE' then v_tb_customer_after.INDUSTRY_PROPS_TYPE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	INCOME_TAX_TYPE	利息所得稅別		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	tax_type	X0179	taxType	CIFX			when 'INCOME_TAX_TYPE' then v_tb_customer_after.INCOME_TAX_TYPE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PRINCIPAL_NAME	代表人姓名	PRINCIPAL	VARCHAR2	200	10	F				X0218	principalName	CIFX			when 'PRINCIPAL_NAME' then v_tb_customer_after.PRINCIPAL_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BIRTHDAY	顧客開戶生日	PRINCIPAL	VARCHAR2	8	10	H	D			X0103	birthday	CIFX		071	when 'BIRTHDAY' then v_tb_customer_after.BIRTHDAY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NATIONALITY	國籍分類代碼		VARCHAR2	3	1	H	O	TB_KEY_VALUE_CODE	nationality	X0192	nationality	CIFX			when 'NATIONALITY' then v_tb_customer_after.NATIONALITY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	GENDER_CODE	性別代碼		VARCHAR2	2	1	H	O	TB_KEY_VALUE_CODE	gender_code	X0174	gender	CIFX			when 'GENDER_CODE' then v_tb_customer_after.GENDER_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REG_COUNTRY_CODE	註冊國別代碼		VARCHAR2	2	2	H	O	TB_SYS_CODE	5	X0224	registeredCountry	CIFX			when 'REG_COUNTRY_CODE' then v_tb_customer_after.REG_COUNTRY_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EVER_CHANGED_CERT_NO	是否更改過身份證／統編		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	ever_changed_cert_no	X0161	everChangedCertificationNumber	CIFX			when 'EVER_CHANGED_CERT_NO' then v_tb_customer_after.EVER_CHANGED_CERT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	MERGE_BANK	合併金融機構別		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	merge_bank	X0191	mergeBank	CIFX			when 'MERGE_BANK' then v_tb_customer_after.MERGE_BANK := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CENTER_BATCH_CREATION	中心批次建檔註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	center_batch_creation	X0105	batchCreationFlag	CIFX			when 'CENTER_BATCH_CREATION' then v_tb_customer_after.CENTER_BATCH_CREATION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PERFORMANCE_DPT_CODE	主經營行		VARCHAR2	4	4	H	O	TB_BRANCH	bh_code	X0205	mainBusinessUnit	CIFX			when 'PERFORMANCE_DPT_CODE' then v_tb_customer_after.PERFORMANCE_DPT_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUSTOMER_TYPE_CODE	顧客類別代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	customer_type_code	X0142	customerType	CIFX			when 'CUSTOMER_TYPE_CODE' then v_tb_customer_after.CUSTOMER_TYPE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DGBAS_INDUSTRY_CODE	行業編號（主計處代碼）	INDUSTRY_CODE	VARCHAR2	6	6	H	O	TB_INDUSTRY_CODE_MAP	dgbas_industry_code	X0150	industrialCodeForDgbas	CIFX			when 'DGBAS_INDUSTRY_CODE' then v_tb_customer_after.DGBAS_INDUSTRY_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PRIOR_PERSON_IDENTIFITY_NO	舊身分證統編		VARCHAR2	10	10	H				X0219	priorCertificationNumber	CIFX			when 'PRIOR_PERSON_IDENTIFITY_NO' then v_tb_customer_after.PRIOR_PERSON_IDENTIFITY_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NCB_INDUSTRY_CODE	行業編號（新央行代碼）	INDUSTRY_CODE	VARCHAR2	6	6	H	O	TB_INDUSTRY_CODE_MAP	ncb_industry_code	X0193	industrialCodeForCbc	CIFX			when 'NCB_INDUSTRY_CODE' then v_tb_customer_after.NCB_INDUSTRY_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SERVE_COMPANY_NAME	顧客服務公司名稱	SERVE_COMPANY	VARCHAR2	200	19	F				X0236	serveCompanyName	CIFX			when 'SERVE_COMPANY_NAME' then v_tb_customer_after.SERVE_COMPANY_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SERVE_COMPANY_CERT_NO	顧客服務公司統編	SERVE_COMPANY	VARCHAR2	10	10	H				X0235	serveCompanyCertificationNumber	CIFX			when 'SERVE_COMPANY_CERT_NO' then v_tb_customer_after.SERVE_COMPANY_CERT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	JOB_POSITION_TYPE	職位別		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	job_position_type	X0187	jobPositionType	CIFX			when 'JOB_POSITION_TYPE' then v_tb_customer_after.JOB_POSITION_TYPE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	INDUSTRY_TYPE_CODE	自然人行業類別代碼		VARCHAR2	3	3	H	O	TB_KEY_VALUE_CODE	esun_industry_type_code	X0182	industryType	CIFX			when 'INDUSTRY_TYPE_CODE' then v_tb_customer_after.INDUSTRY_TYPE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PARENT_COMPANY_CERT_NO	母公司統編（行內歸戶變號）		VARCHAR2	10	10	H				X0201	parentCompanyCertificationNumber	CIFX			when 'PARENT_COMPANY_CERT_NO' then v_tb_customer_after.PARENT_COMPANY_CERT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FOREIGN_BRANCH_FLAG	外商分公司註記		VARCHAR2	1	1	H				X0172	foreignBranchFlag	CIFX			when 'FOREIGN_BRANCH_FLAG' then v_tb_customer_after.FOREIGN_BRANCH_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PARENT_COMPANY_COUNTRY	母公司國別代碼		VARCHAR2	2	2	H	O	TB_SYS_CODE	5	X0202	parentCompanyCountry	CIFX			when 'PARENT_COMPANY_COUNTRY' then v_tb_customer_after.PARENT_COMPANY_COUNTRY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CHINA_MASTER_CODE	大陸商主代碼	CHINA_CODE	VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	china_master_code	X0107	chinaMasterCode	CIFX			when 'CHINA_MASTER_CODE' then v_tb_customer_after.CHINA_MASTER_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CHINA_SUB_CODE	大陸商子代碼	CHINA_CODE	VARCHAR2	3	2	H	O	TB_KEY_VALUE_CODE	china_detail_code	X0108	chinaSubCode	CIFX			when 'CHINA_SUB_CODE' then v_tb_customer_after.CHINA_SUB_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CIF_ORIGINAL_ID	原始身份證字號/統編		VARCHAR2	50	10	H				X0109	customerCertificationNumber	CIFX			when 'CIF_ORIGINAL_ID' then v_tb_customer_after.CIF_ORIGINAL_ID := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DUP_CERT_NO_ORG_CHECKING_NUM	重號時之原始檢查碼		VARCHAR2	1	1	H				X0152	originalCheckNumber	CIFX			when 'DUP_CERT_NO_ORG_CHECKING_NUM' then v_tb_customer_after.DUP_CERT_NO_ORG_CHECKING_NUM := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUST_NAME	顧客姓名		VARCHAR2	200	39	F				X0143	customerName	CIFX			when 'CUST_NAME' then v_tb_customer_after.CUST_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ACCOUNT_PURPOSE_CODE	開戶用途代碼		VARCHAR2	20	2	H	O	TB_KEY_VALUE_CODE	account_purpose_code	X0094	accountPurpose	CIFX			when 'ACCOUNT_PURPOSE_CODE' then v_tb_customer_after.ACCOUNT_PURPOSE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	OTHER_ACCOUNT_PURPOSE	開戶用途－其他		VARCHAR2	20	4	F				X0198	otherAccountPurpose	CIFX			when 'OTHER_ACCOUNT_PURPOSE' then v_tb_customer_after.OTHER_ACCOUNT_PURPOSE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PERSONAL_ANNUAL_INCOME	個人年收入所得		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	personal_annual_income	X0206	personalAnnualIncome	CIFX			when 'PERSONAL_ANNUAL_INCOME' then v_tb_customer_after.PERSONAL_ANNUAL_INCOME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CPS_CUSTOMER_SOURCE_CODE	cps顧客來源代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	cps_customer_source_code	X0135	customerSource	CIFX			when 'CPS_CUSTOMER_SOURCE_CODE' then v_tb_customer_after.CPS_CUSTOMER_SOURCE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EDU_LEVEL_CODE	學歷代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	edu_level_code	X0153	educationLevel	CIFX			when 'EDU_LEVEL_CODE' then v_tb_customer_after.EDU_LEVEL_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	MARRIED_STATUS_CODE	婚姻狀況		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	married_status_code	X0189	marriedStatus	CIFX			when 'MARRIED_STATUS_CODE' then v_tb_customer_after.MARRIED_STATUS_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CHILDREN_NUM	扶養子女數		NUMBER	2	2	H	N			X0106	numberOfChildren	CIFX			when 'CHILDREN_NUM' then v_tb_customer_after.CHILDREN_NUM := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	INTRODUCER_PERSON_CER_NO	介紹人統編		VARCHAR2	20	10	H				X0183	referrerIdentificationNumber	CIFX			when 'INTRODUCER_PERSON_CER_NO' then v_tb_customer_after.INTRODUCER_PERSON_CER_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	MATE_CERT_NO	配偶統編		VARCHAR2	10	10	H				X0190	spouseIdentificationNumber	CIFX			when 'MATE_CERT_NO' then v_tb_customer_after.MATE_CERT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ENTRY_EXIT_PERMIT_START_DATE	入出境證起日		VARCHAR2	20	8	H				X0160	entryAndExitPermitStartDate	CIFX			when 'ENTRY_EXIT_PERMIT_START_DATE' then v_tb_customer_after.ENTRY_EXIT_PERMIT_START_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ENTRY_EXIT_PERMIT_END_DATE	入出境證迄日		VARCHAR2	20	8	H				X0158	entryAndExitPermitEndDate	CIFX			when 'ENTRY_EXIT_PERMIT_END_DATE' then v_tb_customer_after.ENTRY_EXIT_PERMIT_END_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ENTRY_EXIT_PERMIT_NO	入出境證號		VARCHAR2	11	11	H				X0159	entryAndExitPermitNumber	CIFX			when 'ENTRY_EXIT_PERMIT_NO' then v_tb_customer_after.ENTRY_EXIT_PERMIT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FOREIGN_EXCHANGE_ROLE_TYPE	外匯申報身分別代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	foreign_exchange_role_type	X0173	foreignExchangeRoleType	CIFX			when 'FOREIGN_EXCHANGE_ROLE_TYPE' then v_tb_customer_after.FOREIGN_EXCHANGE_ROLE_TYPE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	OFFICE_NOTE_DESCRIPTION	辦事處註記說明		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	office_note_description	X0197	officeFlag	CIFX			when 'OFFICE_NOTE_DESCRIPTION' then v_tb_customer_after.OFFICE_NOTE_DESCRIPTION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	GOVERNMENT_OFFICIAL_NO	官員證編號		VARCHAR2	9	9	H				X0177	diplomaticIdentificationNumber	CIFX			when 'GOVERNMENT_OFFICIAL_NO' then v_tb_customer_after.GOVERNMENT_OFFICIAL_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PARTY_ENGLISH_NAME	當事者英文姓名		VARCHAR2	200	80	H	H			X0203	nameInEnglish	CIFX			when 'PARTY_ENGLISH_NAME' then v_tb_customer_after.PARTY_ENGLISH_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EXPIRED_DATE	居留證迄日	RESIDENCE_PERMIT	VARCHAR2	20	8	H				X0165	alienResidenceExpiredDate	CIFX			when 'EXPIRED_DATE' then v_tb_customer_after.EXPIRED_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ISSUE_DATE	居留證核發日期	RESIDENCE_PERMIT	VARCHAR2	20	8	H	D			X0184	alienResidenceIssueDate	CIFX			when 'ISSUE_DATE' then v_tb_customer_after.ISSUE_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EXCHANGE_RESIDENCE_PERMIT_NO	居留證統編		VARCHAR2	10	10	H				X0164	alienResidenceIdentificationNumber	CIFX			when 'EXCHANGE_RESIDENCE_PERMIT_NO' then v_tb_customer_after.EXCHANGE_RESIDENCE_PERMIT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PASSPORT_NO	護照號碼		VARCHAR2	30	20	H	C			X0204	passportIdentificationNumber	CIFX			when 'PASSPORT_NO' then v_tb_customer_after.PASSPORT_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EXCHANGE_CONTACT_PERSON_NAME	外匯聯絡人姓名	EXCHANGE_CONTACT_PERSON	VARCHAR2	200	29	F				X0162	foreignExchangeContactName	CIFX			when 'EXCHANGE_CONTACT_PERSON_NAME' then v_tb_customer_after.EXCHANGE_CONTACT_PERSON_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EXCHANGE_CONTACT_PERSON_PHONE	外匯聯絡人電話	EXCHANGE_CONTACT_PERSON	VARCHAR2	30	30	H	T			X0163	foreignExchangeContactPhoneNumber	CIFX			when 'EXCHANGE_CONTACT_PERSON_PHONE' then v_tb_customer_after.EXCHANGE_CONTACT_PERSON_PHONE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_ENGLISH_ADDR_COUNTRYCODE	地址國別（簡碼）	CONT_ENGLISH_ADDR	VARCHAR2	3	2	H	O	TB_SYS_CODE	5	X0133	countryInEnglish	CIFX			when 'CONT_ENGLISH_ADDR_COUNTRYCODE' then v_tb_customer_after.CONT_ENGLISH_ADDR_COUNTRYCODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_CITY	通訊地址城市	CONT_ADDRESS	VARCHAR2	30	3	F	O	TB_CITY_AREA_ZIP	city	X0127	residentialCity	CIFX			when 'CONT_CITY' then v_tb_customer_after.CONT_CITY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUST_ZIP_CODE	通訊地址郵遞區號(circizip)	CONT_ADDRESS	VARCHAR2	5	3	H	O	TB_CITY_AREA_ZIP	zip	X0145	residentialZip	CIFX			when 'CUST_ZIP_CODE' then v_tb_customer_after.CUST_ZIP_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_ADDRESS_DETAIL	通訊地址(部分)	CONT_ADDRESS	VARCHAR2	200	32	F				X0124	residentialAddressDetail	CIFX			when 'CONT_ADDRESS_DETAIL' then v_tb_customer_after.CONT_ADDRESS_DETAIL := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PER_CITY	戶籍地址城市	REGI_ADDRESS	VARCHAR2	30	3	F	O	TB_CITY_AREA_ZIP	city	X0209	permanentCity	CIFX			when 'PER_CITY' then v_tb_customer_after.PER_CITY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PER_ZIP	戶籍地址郵遞區號(circizip)	REGI_ADDRESS	VARCHAR2	5	3	H	O	TB_CITY_AREA_ZIP	zip	X0210	permanentZip	CIFX			when 'PER_ZIP' then v_tb_customer_after.PER_ZIP := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REGI_ADDRESS_DETAIL	戶籍地址(部分)	REGI_ADDRESS	VARCHAR2	200	32	F				X0223	permanentAddressDetail	CIFX			when 'REGI_ADDRESS_DETAIL' then v_tb_customer_after.REGI_ADDRESS_DETAIL := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PER_AREA	戶籍地址鄉鎮市區	REGI_ADDRESS	VARCHAR2	30	4	F	O	TB_CITY_AREA_ZIP	area	X0208	permanentArea	CIFX			when 'PER_AREA' then v_tb_customer_after.PER_AREA := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_ENGLISH_ADDR_ADMINAREA	英文地址城市	CONT_ENGLISH_ADDR	VARCHAR2	30	30	H	H			X0132	cityInEnglish	CIFX			when 'CONT_ENGLISH_ADDR_ADMINAREA' then v_tb_customer_after.CONT_ENGLISH_ADDR_ADMINAREA := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_ENGLISH_ADDR	英文地址(部分)	CONT_ENGLISH_ADDR	VARCHAR2	200	66	H	H			X0131	detailAddressInEnglish	CIFX			when 'CONT_ENGLISH_ADDR' then v_tb_customer_after.CONT_ENGLISH_ADDR := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	OVERDUE_CREDIT_ACCOUNT	逾期授信戶註記 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	overdue_credit_account	X0200	overdueCreditFlag	CIFX			when 'OVERDUE_CREDIT_ACCOUNT' then v_tb_customer_after.OVERDUE_CREDIT_ACCOUNT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DEBT_CONSULT	債務協商代碼 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	debt_consult	X0148	debtSettlement	CIFX			when 'DEBT_CONSULT' then v_tb_customer_after.DEBT_CONSULT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONSUMER_DEBT_CLEAN	消費者債務清理代碼 		VARCHAR2	4	4	H	O	TB_KEY_VALUE_CODE	consumer_debt_clean	X0123	customerDebtClearance	CIFX			when 'CONSUMER_DEBT_CLEAN' then v_tb_customer_after.CONSUMER_DEBT_CLEAN := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CREDIT_CARD_SETTLEMENT	清算註記（來自卡處） 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	credit_card_settlement	X0139	creditCardLiquidationFlag	CIFX			when 'CREDIT_CARD_SETTLEMENT' then v_tb_customer_after.CREDIT_CARD_SETTLEMENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SPECIFIC_MEMBER_FLAG	特記對象（業管單位登錄） 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	specific_member_flag	X0239	specialAccountFlag	CIFX			when 'SPECIFIC_MEMBER_FLAG' then v_tb_customer_after.SPECIFIC_MEMBER_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	STOP_USE_CUSTOMER_DATA_FLAG	停止蒐集利用個人資料註記 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	stop_use_customer_data_flag	X0240	stopUsingCustomerDataFlag	CIFX			when 'STOP_USE_CUSTOMER_DATA_FLAG' then v_tb_customer_after.STOP_USE_CUSTOMER_DATA_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TERRORISTS_FLAG	制裁名單註記 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	terrorists_flag	X0244	terroristsFlag	CIFX			when 'TERRORISTS_FLAG' then v_tb_customer_after.TERRORISTS_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUSTOMER_STATUS	顧客狀態代碼 		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	customer_status	X0141	customerStatus	CIFX			when 'CUSTOMER_STATUS' then v_tb_customer_after.CUSTOMER_STATUS := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REHABILITATED	更生註記（來自卡處） 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	rehabilitated	X0225	rehabilitatedFlag	CIFX			when 'REHABILITATED' then v_tb_customer_after.REHABILITATED := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PRE_MEDIATE_FLAG	前置調解註記 		VARCHAR2	4	4	H	O	TB_KEY_VALUE_CODE	pre_mediate_flag	X0216	preMediationFlag	CIFX			when 'PRE_MEDIATE_FLAG' then v_tb_customer_after.PRE_MEDIATE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ACCOUNT_REVIEW_STATE	account review狀態註記 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	account_review_state	X0096	accountReviewStateFlag	CIFX			when 'ACCOUNT_REVIEW_STATE' then v_tb_customer_after.ACCOUNT_REVIEW_STATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BANK_INTERNAL_COMMON_SALE	銀行內部共同行銷註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	bank_internal_common_sale	X0099	crossSellingFlag	CIFX			when 'BANK_INTERNAL_COMMON_SALE' then v_tb_customer_after.BANK_INTERNAL_COMMON_SALE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	AGREE_CS_FLAG	是否同意運用顧客基本資料註記	AGREE_CS	VARCHAR2	5	5	H				X0097	personalInformationAgreeFlag	CIFX			when 'AGREE_CS_FLAG' then v_tb_customer_after.AGREE_CS_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	AGREE_CS_WITH_CONSENT_FLAG	是否同意運用顧客基本資料註記(已徵得同意書)	AGREE_CS	VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	agree_cs_with_consent_flag	X0098	personalInformationConsentFlag	CIFX			when 'AGREE_CS_WITH_CONSENT_FLAG' then v_tb_customer_after.AGREE_CS_WITH_CONSENT_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DM_SALE_FLAG	實體ｄｍ行銷註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	dm_sale_flag	X0151	dmSellingFlag	CIFX			when 'DM_SALE_FLAG' then v_tb_customer_after.DM_SALE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SMS_SALE_FLAG	簡訊行銷註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	sms_sale_flag	X0237	smsSellingFlag	CIFX			when 'SMS_SALE_FLAG' then v_tb_customer_after.SMS_SALE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PHONE_SALE_FLAG	電話行銷註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	phone_sale_flag	X0211	phoneSellingFlag	CIFX			when 'PHONE_SALE_FLAG' then v_tb_customer_after.PHONE_SALE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EMAIL_SALE_FLAG	電子郵件行銷註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	email_sale_flag	X0157	emailSellingFlag	CIFX			when 'EMAIL_SALE_FLAG' then v_tb_customer_after.EMAIL_SALE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NOTIFICATION_TYPE	通知方式		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	notification_type	X0195	sellingNotificationType	CIFX			when 'NOTIFICATION_TYPE' then v_tb_customer_after.NOTIFICATION_TYPE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESI_COMM_CONTENT	戶籍電話		VARCHAR2	100	11	H	T			X0232	permanentPhoneNumber	CIFX			when 'RESI_COMM_CONTENT' then v_tb_customer_after.RESI_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_COMM_CONTENT	通訊電話	RES_TEL	VARCHAR2	100	11	H	T			X0128	residentialPhoneNumber	CIFX		053\071	when 'CONT_COMM_CONTENT' then v_tb_customer_after.CONT_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	COMP_COMM_CONTENT	公司電話	COMPANY_TEL	VARCHAR2	100	11	H	T			X0117	companyPhoneNumber	CIFX			when 'COMP_COMM_CONTENT' then v_tb_customer_after.COMP_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONE_COMM_CONTENT	通訊電話分機	RES_TEL	VARCHAR2	100	4	H	T			X0120	residentialNumberExtension	CIFX			when 'CONE_COMM_CONTENT' then v_tb_customer_after.CONE_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CMPE_COMM_CONTENT	公司電話分機	COMPANY_TEL	VARCHAR2	100	6	H	T			X0111	companyExtensionNumber	CIFX			when 'CMPE_COMM_CONTENT' then v_tb_customer_after.CMPE_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CNTP_COMM_CONTENT	通訊用行動電話		VARCHAR2	100	11	H	T			X0114	mobilePhoneNumber	CIFX			when 'CNTP_COMM_CONTENT' then v_tb_customer_after.CNTP_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TXNP_COMM_CONTENT	交易用行動電話/簡訊密碼專屬行動電話		VARCHAR2	100	11	H	T			X0247	mobilePhoneNumberForSmsTrade	CIFX			when 'TXNP_COMM_CONTENT' then v_tb_customer_after.TXNP_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FAXT_COMM_CONTENT	傳真電話		VARCHAR2	100	11	H	T			X0166	fax	CIFX			when 'FAXT_COMM_CONTENT' then v_tb_customer_after.FAXT_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EMAIL_COMM_CONTENT	電子郵件信箱		VARCHAR2	100	50	H	E			X0154	emailAddress	CIFX			when 'EMAIL_COMM_CONTENT' then v_tb_customer_after.EMAIL_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REFUSE_LOAN_REASON	消金拒絕貸放理由代碼		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	refuse_loan_reason	X0222	reasonToRejectLoan	CIFX			when 'REFUSE_LOAN_REASON' then v_tb_customer_after.REFUSE_LOAN_REASON := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CREDIT_CARD_HOLDER	信用卡之持卡人		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	credit_card_holder	X0138	creditCardHolder	CIFX			when 'CREDIT_CARD_HOLDER' then v_tb_customer_after.CREDIT_CARD_HOLDER := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	INDIVIDUAL_CONSULTATION	個別協商一致性方案註記		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	individual_settlement_flag	X0180	individualSettlementFlag	CIFX			when 'INDIVIDUAL_CONSULTATION' then v_tb_customer_after.INDIVIDUAL_CONSULTATION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	JCIC_NO	聯徵申報統編		VARCHAR2	10	10	H				X0186	jcicNumber	CIFX			when 'JCIC_NO' then v_tb_customer_after.JCIC_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	WISE_CUSTOMER_SEG_MAIN	財富客群-大項代碼		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	wealth_member_ranking	X0251	wiseCustomer	CIFX			when 'WISE_CUSTOMER_SEG_MAIN' then v_tb_customer_after.WISE_CUSTOMER_SEG_MAIN := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FC_FLAG	理專註記		VARCHAR2	1	1	H				X0170	financialCommissionerFlag	CIFX			when 'FC_FLAG' then v_tb_customer_after.FC_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	GIB_VERSION_CODE	gib全球網銀版本代碼		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	gib_version_code	X0176	versionOfGib	CIFX			when 'GIB_VERSION_CODE' then v_tb_customer_after.GIB_VERSION_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	GIB_AUTHTXN_CODE	企網銀關係戶受託範圍（ｃｉｂ）		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	gib_authtxn_code	X0175	gibTrusteeScope	CIFX			when 'GIB_AUTHTXN_CODE' then v_tb_customer_after.GIB_AUTHTXN_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	IVR_PWD_STATE_FLAG	語音密碼狀態		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	ivr_pwd_stat_flag	X0185	voicePasswordStatus	CIFX			when 'IVR_PWD_STATE_FLAG' then v_tb_customer_after.IVR_PWD_STATE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NO_BANK_STATM_FLAG	不寄對帳單及通知註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	no_bank_statm_flag	X0196	doNotSendStatementFlag	CIFX			when 'NO_BANK_STATM_FLAG' then v_tb_customer_after.NO_BANK_STATM_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TRAVEL_CARD_FLAG	是否持有國民旅遊卡註記		VARCHAR2	2	1	H	O	TB_KEY_VALUE_CODE	travel_card_flag	X0245	travelCardFlag	CIFX			when 'TRAVEL_CARD_FLAG' then v_tb_customer_after.TRAVEL_CARD_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CAPITAL	公司資本額(萬)		NUMBER	11	11	H	N			X0104	capital	CIFX			when 'CAPITAL' then v_tb_customer_after.CAPITAL := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	YEAR_REVENUE_CODE	公司年營業額代碼		VARCHAR2	20	2	H	O	TB_KEY_VALUE_CODE	year_revenue_code	X0252	annualRevenue	CIFX			when 'YEAR_REVENUE_CODE' then v_tb_customer_after.YEAR_REVENUE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TW_FUNDED_FLAG	台資註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	tw_funded_flag	X0246	taiwanFundedEnterpriseFlag	CIFX			when 'TW_FUNDED_FLAG' then v_tb_customer_after.TW_FUNDED_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	UD_EXTENSION_FLAG	無擔保消金債務展延註記		VARCHAR2	1	1	H				X0250	unsecuredLoanExtensionFlag	CIFX			when 'UD_EXTENSION_FLAG' then v_tb_customer_after.UD_EXTENSION_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DEBT_REFRESH_CLOSED	更生結案狀態代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	debt_refresh_closed	X0149	rehabilitationClosingStatus	CIFX			when 'DEBT_REFRESH_CLOSED' then v_tb_customer_after.DEBT_REFRESH_CLOSED := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DEBT_CLEAN_CLOSED	清算結案狀態代碼		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	debt_clean_closed	X0147	liquidationClosingStatus	CIFX			when 'DEBT_CLEAN_CLOSED' then v_tb_customer_after.DEBT_CLEAN_CLOSED := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PIB_VERSION	個網銀版本代碼		VARCHAR2	20	1	H	O	TB_KEY_VALUE_CODE	pib_vesion	X0215	pibVersion	CIFX			when 'PIB_VERSION' then v_tb_customer_after.PIB_VERSION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PIB_STATUS	個網銀狀態		VARCHAR2	2	1	H	O	TB_KEY_VALUE_CODE	pib_status	X0214	pibStatus	CIFX			when 'PIB_STATUS' then v_tb_customer_after.PIB_STATUS := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PIB_APPLY_DATE	新個網申請日期		VARCHAR2	8	8	H	D			X0212	pibApplicationDate	CIFX			when 'PIB_APPLY_DATE' then v_tb_customer_after.PIB_APPLY_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PIB_CANCEL_DATE	新個網註銷日期		VARCHAR2	8	8	H	D			X0213	pibCancellationDate	CIFX			when 'PIB_CANCEL_DATE' then v_tb_customer_after.PIB_CANCEL_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SUPPLEMENTARY_PREMIUM_FLAG	二代健保－免扣補充保費註記（僅適用自然人）		VARCHAR2	1	1	H				X0241	supplementaryPremiumFlag	CIFX			when 'SUPPLEMENTARY_PREMIUM_FLAG' then v_tb_customer_after.SUPPLEMENTARY_PREMIUM_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RECEIPT_BUSINESS_FLAG	非蒞行交易(原:外收送業務)		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	deliverable_service	X0221	outsidePickupServiceFlag	CIFX			when 'RECEIPT_BUSINESS_FLAG' then v_tb_customer_after.RECEIPT_BUSINESS_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FAX_TRANSACTION_FLAG	傳真交易		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	by_fax_service	X0169	faxTransactionFlag	CIFX			when 'FAX_TRANSACTION_FLAG' then v_tb_customer_after.FAX_TRANSACTION_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUST_RATING	顧客等級		VARCHAR2	5	5	H	O	TB_KEY_VALUE_CODE	cust_rating	X0144	customerRanking	CIFX			when 'CUST_RATING' then v_tb_customer_after.CUST_RATING := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TELLER_NO	櫃員代號		VARCHAR2	2	2	H				X0243	tellerNumber	CIFX			when 'TELLER_NO' then v_tb_customer_after.TELLER_NO := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	DATA_ENTRY_DATE	登錄日期		VARCHAR2	8	8	H	D			X0146	caseCreatedDate	CIFX			when 'DATA_ENTRY_DATE' then v_tb_customer_after.DATA_ENTRY_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REPORT_UNIT	通報單位(問題戶專用)		VARCHAR2	80	10	F				X0228	reportUnit	CIFX			when 'REPORT_UNIT' then v_tb_customer_after.REPORT_UNIT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CREATION_UNIT	建檔單位(問題戶專用)		VARCHAR2	4	4	H	O	TB_BRANCH	bh_code	X0137	caseCreatedDepartment	CIFX			when 'CREATION_UNIT' then v_tb_customer_after.CREATION_UNIT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REPORT_DESCRIPTION	案情摘要(問題戶專用)		VARCHAR2	1024	79	F				X0227	caseDescription	CIFX			when 'REPORT_DESCRIPTION' then v_tb_customer_after.REPORT_DESCRIPTION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	GROWN_UP_GUARDIAN_SHIP	成年監護		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	grown_up_guardianship	X0178	grownUpGuardianship	CIFX			when 'GROWN_UP_GUARDIAN_SHIP' then v_tb_customer_after.GROWN_UP_GUARDIAN_SHIP := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PARTY_KIND	顧客種類		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	party_kind	X0535	partyKind	CIFX			when 'PARTY_KIND' then v_tb_customer_after.PARTY_KIND := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FIN_HOLD_CUS_STATE_FLAG	金控及其子公司資料運用聲明註記		VARCHAR2	1	1	H				X0536	financialHoldingsCustomerStatement	CIFX			when 'FIN_HOLD_CUS_STATE_FLAG' then v_tb_customer_after.FIN_HOLD_CUS_STATE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NOTE	注意事項		VARCHAR2	1024	29	F				X0194	noticeForDepositAndRemittance	CIFX			when 'NOTE' then v_tb_customer_after.NOTE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NO_SEND_TO_CIP_FLAG	不同步cip註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	no_send_to_cip_flag	X0560	0	CIFX			when 'NO_SEND_TO_CIP_FLAG' then v_tb_customer_after.NO_SEND_TO_CIP_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_NOTE	共同行銷:往來交易及其他相關資料區		VARCHAR2	11	11	H				X0561	0	CIFX			when 'CROSS_SELLING_NOTE' then v_tb_customer_after.CROSS_SELLING_NOTE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BRANCH_OR_SUBSIDIARY_FLAG	海外分子行註記		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	branch_or_subsidiary_flag	X0562	branchOrSubsidiaryFlag	CIFX			when 'BRANCH_OR_SUBSIDIARY_FLAG' then v_tb_customer_after.BRANCH_OR_SUBSIDIARY_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REFUSE_TXN_DATE	最新支票拒往日期		VARCHAR2	8	8	H	D			X0569	rejectedCheckDate	CIFX			when 'REFUSE_TXN_DATE' then v_tb_customer_after.REFUSE_TXN_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	LOAN_NOTE	授信注意事項		VARCHAR2	120	39	F				X0570	loanNote	CIFX			when 'LOAN_NOTE' then v_tb_customer_after.LOAN_NOTE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	MGNT_UNIT_CODE	理專所屬分行		VARCHAR2	4	4	H				X0573	mgntUnitCode	CIFX			when 'MGNT_UNIT_CODE' then v_tb_customer_after.MGNT_UNIT_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	OTP_SERVICE	otp簡訊密碼服務狀態註記		VARCHAR2	1	1	H	O	CD_VALUE_LIST	0,1,2,3	X0199	smsPasswordServiceFlag	CIFX			when 'OTP_SERVICE' then v_tb_customer_after.OTP_SERVICE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	SPECIAL_SERVICE_FLAG	電子銀行特約服務項目（語音＆網銀）		VARCHAR2	5	5	H		CD_VALUE_LIST	'0','1','2'	X0238	electronicBankingSpecialServices	CIFX			when 'SPECIAL_SERVICE_FLAG' then v_tb_customer_after.SPECIAL_SERVICE_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CIF_VERIFIED_ID	顧客歸戶統編		VARCHAR2	20	10	H				X0110	customerCirciKey	CIFX			when 'CIF_VERIFIED_ID' then v_tb_customer_after.CIF_VERIFIED_ID := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CUSTOMER_ID	顧客主檔pk		VARCHAR2							X0140	0	CIFX			when 'CUSTOMER_ID' then v_tb_customer_after.CUSTOMER_ID := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_FLAG	共銷註記		VARCHAR2							X0575	crossSellingFlag	CIFX			when 'CROSS_SELLING_FLAG' then v_tb_customer_after.CROSS_SELLING_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_DATE	共銷簽署日期		VARCHAR2							X0576	crossSellingDate	CIFX			when 'CROSS_SELLING_DATE' then v_tb_customer_after.CROSS_SELLING_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_TIME	共銷簽署時間		VARCHAR2							X0577	crossSellingTime	CIFX			when 'CROSS_SELLING_TIME' then v_tb_customer_after.CROSS_SELLING_TIME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_IP	共銷簽署IP		VARCHAR2							X0579	crossSellingIp	CIFX			when 'CROSS_SELLING_IP' then v_tb_customer_after.CROSS_SELLING_IP := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_CHANNEL	共銷更新通路別代號		VARCHAR2							X0580	crossSellingChannel	CIFX			when 'CROSS_SELLING_CHANNEL' then v_tb_customer_after.CROSS_SELLING_CHANNEL := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_UPD_PERSON	共銷註記更新人員		VARCHAR2							X0581	crossSellingUpdPerson	CIFX			when 'CROSS_SELLING_UPD_PERSON' then v_tb_customer_after.CROSS_SELLING_UPD_PERSON := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EFG_FLAG	eFingo會員註記		VARCHAR2							X0574	efgFlag	CIFX			when 'EFG_FLAG' then v_tb_customer_after.EFG_FLAG := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESI_COMM_CONTENT2	戶籍電話二		VARCHAR2							X0233	permanentPhoneNumber2	CIFX			when 'RESI_COMM_CONTENT2' then v_tb_customer_after.RESI_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESE_COMM_CONTENT	戶籍電話分機		VARCHAR2							X0229	permanentExtensionNumber	CIFX			when 'RESE_COMM_CONTENT' then v_tb_customer_after.RESE_COMM_CONTENT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BBCALL	呼叫器		VARCHAR2							X0100	bbcall	CIFX			when 'BBCALL' then v_tb_customer_after.BBCALL := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_COMM_CONTENT2	通訊電話二		VARCHAR2							X0129	residentialPhoneNumber2	CIFX			when 'CONT_COMM_CONTENT2' then v_tb_customer_after.CONT_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	COMP_COMM_CONTENT2	公司電話二		VARCHAR2							X0118	corporationPhoneNumber2	CIFX			when 'COMP_COMM_CONTENT2' then v_tb_customer_after.COMP_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESE_COMM_CONTENT2	戶籍電話分機二		VARCHAR2							X0230	permanentExtensionNumber2	CIFX			when 'RESE_COMM_CONTENT2' then v_tb_customer_after.RESE_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONE_COMM_CONTENT2	通訊電話分機二		VARCHAR2							X0121	residentialNumberExtension2	CIFX			when 'CONE_COMM_CONTENT2' then v_tb_customer_after.CONE_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CMPE_COMM_CONTENT2	公司電話分機二		VARCHAR2							X0112	corporationExtensionNumber2	CIFX			when 'CMPE_COMM_CONTENT2' then v_tb_customer_after.CMPE_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CNTP_COMM_CONTENT2	通訊用行動電話二		VARCHAR2							X0115	residentialMobilePhoneNumber2	CIFX			when 'CNTP_COMM_CONTENT2' then v_tb_customer_after.CNTP_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TXNP_COMM_CONTENT2	交易用行動電話/簡訊密碼專屬行動電話二		VARCHAR2							X0248	mobilePhoneNumberForSmsTrade2	CIFX			when 'TXNP_COMM_CONTENT2' then v_tb_customer_after.TXNP_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BBCALL2	呼叫器二		VARCHAR2							X0101	bbCall2	CIFX			when 'BBCALL2' then v_tb_customer_after.BBCALL2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FAXT_COMM_CONTENT2	傳真電話二		VARCHAR2							X0167	fax2	CIFX			when 'FAXT_COMM_CONTENT2' then v_tb_customer_after.FAXT_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EMAIL_COMM_CONTENT2	電子郵件信箱二		VARCHAR2							X0155	emailAddress2	CIFX			when 'EMAIL_COMM_CONTENT2' then v_tb_customer_after.EMAIL_COMM_CONTENT2 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESI_COMM_CONTENT3	戶籍電話三		VARCHAR2							X0234	permanentPhoneNumber3	CIFX			when 'RESI_COMM_CONTENT3' then v_tb_customer_after.RESI_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_COMM_CONTENT3	通訊電話三		VARCHAR2							X0130	residentialPhoneNumber3	CIFX			when 'CONT_COMM_CONTENT3' then v_tb_customer_after.CONT_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	COMP_COMM_CONTENT3	公司電話三		VARCHAR2							X0119	corporationPhoneNumber3	CIFX			when 'COMP_COMM_CONTENT3' then v_tb_customer_after.COMP_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	RESE_COMM_CONTENT3	戶籍電話分機三		VARCHAR2							X0231	permanentExtensionNumber3	CIFX			when 'RESE_COMM_CONTENT3' then v_tb_customer_after.RESE_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONE_COMM_CONTENT3	通訊電話分機三		VARCHAR2							X0122	residentialExtensionNumber3	CIFX			when 'CONE_COMM_CONTENT3' then v_tb_customer_after.CONE_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CMPE_COMM_CONTENT3	公司電話分機三		VARCHAR2							X0113	corporationExtensionNumber3	CIFX			when 'CMPE_COMM_CONTENT3' then v_tb_customer_after.CMPE_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CNTP_COMM_CONTENT3	通訊用行動電話三		VARCHAR2							X0116	residentialMobilePhoneNumber3	CIFX			when 'CNTP_COMM_CONTENT3' then v_tb_customer_after.CNTP_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	TXNP_COMM_CONTENT3	交易用行動電話/簡訊密碼專屬行動電話三		VARCHAR2							X0249	mobilePhoneNumberForSmsTrade3	CIFX			when 'TXNP_COMM_CONTENT3' then v_tb_customer_after.TXNP_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	BBCALL3	呼叫器三		VARCHAR2							X0102	bbCall3	CIFX			when 'BBCALL3' then v_tb_customer_after.BBCALL3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	FAXT_COMM_CONTENT3	傳真電話三		VARCHAR2							X0168	fax3	CIFX			when 'FAXT_COMM_CONTENT3' then v_tb_customer_after.FAXT_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	EMAIL_COMM_CONTENT3	電子郵件信箱三		VARCHAR2							X0156	emailAddress3	CIFX			when 'EMAIL_COMM_CONTENT3' then v_tb_customer_after.EMAIL_COMM_CONTENT3 := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NOTE_ON_SAVE_TRASFER	存匯注意事項		VARCHAR2							X0537	noteOnCredit	CIFX			when 'NOTE_ON_SAVE_TRASFER' then v_tb_customer_after.NOTE_ON_SAVE_TRASFER := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	NOTE_ON_CREDIT	授信注意事項		VARCHAR2							X0538	noteOnSaveTrasfer	CIFX			when 'NOTE_ON_CREDIT' then v_tb_customer_after.NOTE_ON_CREDIT := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	LC_ORIGINAL_HANDLE_WAY	信用狀正本處理方式		VARCHAR2	4	4	H	O	TB_KEY_VALUE_CODE	lc_original_handle_way	X0188	originalIcProcessingMethod	CIFX			when 'LC_ORIGINAL_HANDLE_WAY' then v_tb_customer_after.LC_ORIGINAL_HANDLE_WAY := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	REPORT_DATE	案發日期		VARCHAR2	8	8	H	D			X0226	caseReportedDate	CIFX			when 'REPORT_DATE' then v_tb_customer_after.REPORT_DATE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	JOB_POSITION_NAME	職稱		VARCHAR2	40	9	F				X0567	jobPositionName	CIFX			when 'JOB_POSITION_NAME' then v_tb_customer_after.JOB_POSITION_NAME := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CROSS_SELLING_VERSION	共銷簽署條款版本		VARCHAR2							X0578	crossSellingVersion	CIFX			when 'CROSS_SELLING_VERSION' then v_tb_customer_after.CROSS_SELLING_VERSION := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	PROPERTY_TYPE_CODE	顧客性質代碼(符合票交所定義)		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	property_type_code	X0220	customerPropertyType	CIFX			when 'PROPERTY_TYPE_CODE' then v_tb_customer_after.PROPERTY_TYPE_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	ACCOUNT_REVIEW_PENDING	account review暫停註記 		VARCHAR2	1	1	H	O	TB_KEY_VALUE_CODE	account_review_pending	X0095	accountReviewPendingFlag	CIFX			when 'ACCOUNT_REVIEW_PENDING' then v_tb_customer_after.ACCOUNT_REVIEW_PENDING := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	AML_REVIEW_STATUS_CODE	AML持續審查狀態		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	aml_review_status_code	X0582	amlControlStatusCode	CIFX			when 'AML_REVIEW_STATUS_CODE' then v_tb_customer_after.AML_REVIEW_STATUS_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	AML_CONTROL_STATUS_CODE	AML管控狀態		VARCHAR2	2	2	H	O	TB_KEY_VALUE_CODE	aml_control_status_code	X0583	amlReviewStatusCode	CIFX			when 'AML_CONTROL_STATUS_CODE' then v_tb_customer_after.AML_CONTROL_STATUS_CODE := model_jsb.get_string(model_key_jsb_key_list(i));
TB_CUSTOMER	CONT_AREA	通訊地址鄉鎮市區	CONT_ADDRESS	VARCHAR2	30	4	F	O	TB_CITY_AREA_ZIP	area	X0126	residentialArea	CIFX			when 'CONT_AREA' then v_tb_customer_after.CONT_AREA := model_jsb.get_string(model_key_jsb_key_list(i));
